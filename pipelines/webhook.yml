resources:
  # see https://docs.microsoft.com/en-us/azure/devops/pipelines/process/resources?view=azure-devops&tabs=schema#define-a-webhooks-resource
  # for setup instructions
  webhooks:
    - webhook: gitHubWebHook
      connection: GitHubWebHook
      filters:
      # action is CREATED for code scanning...
      - path: action
        value: created
      # ... but action is CREATE for dependabot?
      - path: action
        value: create
      #  - path: repositoryName      
      #    value: maven-releases     
steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Triggered via webhook!"
      
      # common properties
      $repoName = "${{ parameters.gitHubWebHook.repository.full_name }}"
      
      # handle code scanning alert
      $alertUrl = "${{ parameters.gitHubWebHook.alert.html_url }}"
      if ($alertUrl) {
        Write-Host "Code scanning alert detected: [$alertUrl]"
        $alertType = "codescanning"
        
        $ruleName = "${{ parameters.gitHubWebHook.alert.rule.name }}"
        $shortDescription = "${{ parameters.gitHubWebHook.alert.rule.description }}"
        $fullDescription = "${{ parameters.gitHubWebHook.alert.rule.full_description }}"
        
        $title = "[CodeScanning][$repoName][$ruleName] $shortDescription"
        $description = "<div>Code scanning alert in repo <bold>$repoName</bold>.</div><div><br></div>"
        $description = $description + "<div>URL is&nbsp;<a href='$alertUrl'>$alertUrl</a></div><div><br></div>"
        $description = $description + "<div>$fullDescription</div>"
      }

      # properties for dependabot alerts
      $dependencyPackage = "${{ parameters.gitHubWebHook.alert.affected_package_name }}"
      if ($dependencyPackage) {
        Write-Host "Dependency vulnerability alert detected for: [$dependencyPackage]"
        $alertType = "dependency"
        
        $dependencyRange = "${{ parameters.gitHubWebHook.alert.affected_range }}"
        $dependencyFixedIn = "${{ parameters.gitHubWebHook.alert.fixed_in }}"
        $dependencyCVE = "${{ parameters.gitHubWebHook.alert.external_identifier }}"
        $dependencySeverity = "${{ parameters.gitHubWebHook.alert.severity }}"
        $dependencyFixedIn = "${{ parameters.gitHubWebHook.alert.fixed_in }}"
        
        $title = "[Depency Vulnerability][$repoName][$dependencyPackage][$severity] Vulnerability for $dependencyCVE"
        $description = "<div>Package <bold>$dependencyPackage</bold></div><div><br></div>"
        $description = $description + "<div>Range <bold>$dependencyRange</bold></div><div><br></div>"
        $description = $description + "<div>Fixed in <bold>$dependencyFixedIn</bold></div><div><br></div>"
      }
      
      Write-Host "##vso[task.setvariable variable=alertType;]$alertType"
      Write-Host "##vso[task.setvariable variable=title;]$title"
      Write-Host "##vso[task.setvariable variable=description;]$description"

- ${{ if eq(variables.alertType, 'codescanning') }}:
  - bash: echo "Code scanning alert!"
    displayName: "Code scanning"
  
- ${{ if eq(variables.alertType, 'dependency') }}:
  - bash: echo "Dependency alert!"
    displayName: "Code scanning"

- bash: |
    echo Title: ${title}
    echo Description: ${description}
  displayName: "Dump vars"

- bash: az --version
  displayName: 'Show Azure CLI version'

- bash: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
  env:
    AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
  displayName: 'Login Azure DevOps Extension'

- bash: az devops configure --defaults organization=$(System.TeamFoundationCollectionUri) project=$(System.TeamProject) --use-git-aliases true
  displayName: 'Set default Azure DevOps organization and project'

- bash: |
    az boards work-item show --id 193
  displayName: 'Show work item'   
